openapi: 3.0.2
servers:
  - url: 'https://data.traffic.hereapi.com/v7'
info:
  description: The HERE Traffic API is a REST API that provides traffic flow and incidents information.
  license:
    name: HERE Documentation License
    url: 'https://legal.here.com/en-gb/terms/documentation-license'
  termsOfService: 'http://developer.here.com/terms-conditions'
  title: Traffic API v7
  version: 7.2.0
  x-apisguru-categories:
    - location
  x-document-meta-data:
    copyright: Â© 2023 HERE Europe B.V.
    date-created: '2023-02-28T16:09:10+00:00'
    document-id: 0befb769-5605-4b81-8107-9e6aee9904fa
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://avatars.githubusercontent.com/u/2835506'
  x-origin:
    - format: openapi
      url: 'https://developer.here.com/documentation/traffic-api/swagger/traffic-v7-openapi.yml'
      version: '3.0'
  x-providerName: here.com
  x-serviceName: traffic
security:
  - Bearer: []
  - ApiKey: []
paths:
  /flow:
    get:
      description: |
        Get real-time traffic flow data for a geospatial area.
      operationId: getFlow
      parameters:
        - $ref: '#/components/parameters/in'
        - $ref: '#/components/parameters/locationReferencing'
        - $ref: '#/components/parameters/minJamFactor'
        - $ref: '#/components/parameters/maxJamFactor'
        - $ref: '#/components/parameters/functionalClasses'
        - $ref: '#/components/parameters/advancedFeatures'
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/FlowResponseOk'
        '400':
          $ref: '#/components/responses/FlowResponseInvalidRequest'
        '401':
          $ref: '#/components/responses/FlowResponseAuthenticationFailed'
        '403':
          $ref: '#/components/responses/FlowResponseNotAllowed'
        '414':
          $ref: '#/components/responses/RequestUriTooLong'
        '500':
          $ref: '#/components/responses/FlowResponseInternalServerError'
        '503':
          $ref: '#/components/responses/ResponseServiceUnavailableError'
      summary: Real-Time Flow Information
      tags:
        - Real-Time Traffic
  /health:
    get:
      description: Returns the health of the service
      operationId: getHealth
      parameters:
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/HealthResponseOk'
        '414':
          $ref: '#/components/responses/RequestUriTooLong'
        default:
          $ref: '#/components/responses/HealthResponseFail'
      security: []
      summary: Health status of the service
      tags:
        - API Information
  /incidents:
    get:
      description: |
        Get traffic incidents for a geospatial area.
      operationId: getIncidents
      parameters:
        - $ref: '#/components/parameters/in'
        - $ref: '#/components/parameters/locationReferencing'
        - $ref: '#/components/parameters/functionalClasses'
        - $ref: '#/components/parameters/criticality'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/earliestStartTime'
        - $ref: '#/components/parameters/latestEndTime'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/units'
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/IncidentsResponseOk'
        '400':
          $ref: '#/components/responses/IncidentsResponseInvalidRequest'
        '401':
          $ref: '#/components/responses/IncidentResponseAuthenticationFailed'
        '403':
          $ref: '#/components/responses/IncidentsResponseNotAllowed'
        '414':
          $ref: '#/components/responses/RequestUriTooLong'
        '500':
          $ref: '#/components/responses/IncidentsResponseInternalServerError'
        '503':
          $ref: '#/components/responses/ResponseServiceUnavailableError'
      summary: Real-Time Incident Information
      tags:
        - Real-Time Traffic
  '/incidents/{originalId}':
    get:
      description: |
        Get traffic incident for a given id. The id can be prefixed with a namespace.
        If no namespace is specified, the default namespace is "here:traffic:incident".
      operationId: getIncidentsById
      parameters:
        - $ref: '#/components/parameters/originalId'
        - $ref: '#/components/parameters/locationReferencing'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/units'
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/IncidentItemResponseOk'
        '400':
          $ref: '#/components/responses/IncidentItemResponseInvalidRequest'
        '401':
          $ref: '#/components/responses/IncidentResponseAuthenticationFailed'
        '403':
          $ref: '#/components/responses/IncidentsResponseNotAllowed'
        '404':
          $ref: '#/components/responses/IncidentItemResponseNotFound'
        '414':
          $ref: '#/components/responses/RequestUriTooLong'
        '500':
          $ref: '#/components/responses/IncidentsResponseInternalServerError'
        '503':
          $ref: '#/components/responses/ResponseServiceUnavailableError'
      summary: Real-Time Incident Information for the given id
      tags:
        - Real-Time Traffic
  /openapi:
    get:
      description: Returns the OpenAPI specification of the Traffic API v7
      operationId: getOpenAPI
      parameters:
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/OpenApiResponseOk'
          description: OpenAPI specification of Traffic API v7
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
      security: []
      summary: Retrieves this API specification in OpenAPI 3 format
      tags:
        - API Information
  /version:
    get:
      description: Returns the version of the service
      operationId: getVersion
      parameters:
        - $ref: '#/components/parameters/XRequestIdParam'
      responses:
        '200':
          $ref: '#/components/responses/VersionResponseOk'
        '414':
          $ref: '#/components/responses/RequestUriTooLong'
        '500':
          $ref: '#/components/responses/ErrorResponseInternalServerError'
        '502':
          $ref: '#/components/responses/ErrorResponseBadGateway'
        '503':
          $ref: '#/components/responses/ErrorResponseServiceUnavailable'
        '504':
          $ref: '#/components/responses/ErrorResponseGatewayTimeout'
      security: []
      summary: Full version of the API
      tags:
        - API Information
components:
  examples:
    ErrorFlowResponseExampleInternalServerError:
      value:
        action: please contact system administrator
        cause: Internal Server Error
        code: E608666
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
        status: 500
        title: Internal server error
    ErrorFlowResponseExampleInvalidRequest:
      value:
        action: request must adhere to API specification
        cause: parameter `in` is missing
        code: E608002
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 400
        title: Malformed request
    ErrorIncidentItemResponseExampleInvalidId:
      value:
        action: request must contain valid incident id
        cause: Incident id failed validation
        code: E608039
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 400
        title: Malformed request
    ErrorIncidentItemResponseExampleNotFound:
      value:
        action: request must contain valid incident id
        cause: Incident item for given id not found
        code: E608038
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 404
        title: Incident item not found or removed from system
    ErrorIncidentsResponseExampleInternalServerError:
      value:
        action: please contact system administrator
        cause: Internal Server Error
        code: E608666
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
        status: 500
        title: Internal server error
    ErrorIncidentsResponseExampleInvalidRequest:
      value:
        action: request must adhere to API specification
        cause: parameter `in` is missing
        code: E608002
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 400
        title: Malformed request
    ErrorResponseExampleBadGateway:
      value:
        action: ''
        cause: Bad Gateway
        code: E600002
        correlationId: ''
        status: 502
        title: 'failed with reason: bad gateway'
    ErrorResponseExampleGatewayTimeout:
      value:
        action: ''
        cause: Gateway Timeout
        code: E600000
        correlationId: ''
        status: 504
        title: 'failed with reason: gateway timeout'
    ErrorResponseExampleInternalServerError:
      value:
        action: please contact system administrator
        cause: Internal Server Error
        code: E608666
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
        status: 500
        title: Internal server error
    ErrorResponseExampleServiceUnavailable:
      value:
        action: try again later or contact system administrator
        cause: failed to fetch traffic information
        code: E608021
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 503
        title: Traffic information failure
    ErrorResponseExampleServiceUnavailableError:
      value:
        action: try again later or contact system administrator
        cause: failed to fetch traffic information
        code: E608021
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
        status: 503
        title: Traffic information failure
    ErrorResponseExampleUriTooLong:
      value:
        action: request must adhere to API specification
        cause: Request URI is too long. Actual length is 1001 while maximal allowed is 1000
        code: E608045
        correlationId: SAMPLE_CORRELATION_ID
        status: 414
        title: Malformed request
    OpenApiResponse:
      value:
        info:
          title: Reference API v2
        openapi: 3.0.2
        paths: {}
        servers: {}
    UnauthorizedErrorResponse:
      value:
        error: Unauthorized
        error_description: No credentials found
  headers:
    X-Correlation-Id:
      description: Auto-generated id that univocally identifies the request.
      example: 4199533b-6290-41db-8d79-edf4f4019a74
      schema:
        type: string
    X-Request-Id:
      description: |
        User-provided token that can be used to trace a request or a group of requests sent to the service. This can be any string but UUID is preferred.
      example: 8230d7ad-3f1c-4191-a8dd-f3c42026da89
      schema:
        type: string
  parameters:
    XRequestIdParam:
      description: |
        User-provided token that can be used to trace a request or a group of requests sent to the service. This can be any string but UUID is preferred.
      example: 8230d7ad-3f1c-4191-a8dd-f3c42026da89
      in: header
      name: X-Request-Id
      schema:
        type: string
    advancedFeatures:
      description: |
        A list of advanced features separated by commas (`,`), to return results for.

        | Feature        | Description |
        |----------------|-------------|
        | `deepCoverage` | More complete flow coverage |
        | `lanes`        | Lane level traffic information about lanes designated for High Occupancy Vehicles or at highway forks/splits |

        **NOTE:** Advanced features are billed at a separate price point to normal requests. Please
        contact HERE sales for further details.
      examples:
        criticalAndMajor:
          summary: Deep coverage and Lanes
          value:
            - deepCoverage
            - lanes
        criticalOnly:
          summary: Deep coverage
          value:
            - deepCoverage
      explode: false
      in: query
      name: advancedFeatures
      required: false
      schema:
        items:
          enum:
            - deepCoverage
            - lanes
          type: string
        type: array
        uniqueItems: true
      style: form
    criticality:
      description: |
        The severity of the incident that has occured, with the following possible values: low (least severe), minor, major, and critical (most severe).
        A list of criticality values separated by commas (`,`), to return results for.
      examples:
        criticalAndMajor:
          summary: Critical and Major incidents
          value:
            - critical
            - major
        criticalOnly:
          summary: Only critical incidents
          value:
            - critical
      explode: false
      in: query
      name: criticality
      schema:
        items:
          enum:
            - low
            - minor
            - major
            - critical
          type: string
        type: array
        uniqueItems: true
      style: form
    earliestStartTime:
      description: |
        The earliest start time that is accepted for an incident to be included in the results.

        Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.
      example: '2019-10-10T00:00:00.00Z'
      in: query
      name: earliestStartTime
      schema:
        $ref: '#/components/schemas/Time'
      style: form
    functionalClasses:
      description: |
        A list of functional classes separated by commas (`,`), to return results for. The
        functional class is used to group roads depending on the speed, importance, and
        connectivity.

        Functional classes are integers from `1` to `5` inclusive where functional class `1` are
        the most important and functional class `5` are the least important. The table below
        describes the roads that fall into each class.

        | Functional Class | Description |
        |------------------|-------------|
        | 1                | These roads are meant for high volume, maximum speed traffic between and through major metropolitan areas. There are very few, if any, speed changes. Access to this road is usually controlled. |
        | 2                | These roads are used to channel traffic to Main Roads (functionalClass=1) for travel between and through cities in the shortest amount of time. There are very few, if any speed changes. |
        | 3                | These roads interconnect First Class Roads (2) and provide a high volume of traffic movement at a lower level of mobility than First Class Roads (2). |
        | 4                | These roads provide for a high volume of traffic movement at moderate speeds between neighborhoods. These roads connect with higher Functional Class roads to collect and distribute traffic between neighborhoods. |
        | 5                | These roads' volume and traffic movements are below the level of any other road. |
      examples:
        all:
          summary: All functional classes (default)
          value:
            - 1
            - 2
            - 3
            - 4
            - 5
        one:
          summary: Only functional class 1
          value:
            - 1
        one_two_three:
          summary: Functional classes 1 - 3
          value:
            - 1
            - 2
            - 3
      in: query
      name: functionalClasses
      required: false
      schema:
        default:
          - 1
          - 2
          - 3
          - 4
          - 5
        items:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
        type: array
      style: form
    in:
      description: |
        Return flow items within a geographical area.
        Area within which to return flow.

        A geographic area can be one of the following:

         * A circular area, provided as latitude, longitude, and radius (in meters)

           Format: `circle:{latitude},{longitude};r={radius}`

           Type: `circle:{decimal},{decimal};r={integer}`

           Example: `circle:13.1,-43.1;r=10000`

         * A bounding box, provided as _west longitude_, _south latitude_, _east longitude_, _north latitude_

           Format: `bbox:{west longitude},{south latitude},{east longitude},{north latitude}`

           Example: `bbox:13.08836,52.33812,13.761,52.6755`

         * A corridor, provided as a polyline in
           [Flexible Polyline](https://github.com/heremaps/flexible-polyline) encoding and a
           radius/width (in meters). The radius is measured perpendicular to each segment of the
           polyline on both sides, so a radius of 50 meters will cover an area 50 meters on either
           side of the polyline and be 100 meters wide from one side to the other.

           Format: `corridor:{polyline};r={radius}`

           Example: `corridor:BF05xgKuy2xCx9B7vUl0OhnR54EqSzpEl-HxjD3pBiGnyGi2CvwFsgD3nD4vB6e;r=50`
      examples:
        bbox:
          summary: A bounding box
          value: 'bbox:13.08836,52.33812,13.761,52.6755'
        circle:
          summary: A circular area
          value: 'circle:13.1,-43.1;r=10000'
        corridor:
          summary: A corridor
          value: 'corridor:BF05xgKuy2xCx9B7vUl0OhnR54EqSzpEl-HxjD3pBiGnyGi2CvwFsgD3nD4vB6e;r=50'
        tile:
          summary: A tile
          value: 'tile:377894440'
      in: query
      name: in
      required: true
      schema:
        type: string
      style: form
    lang:
      description: |
        The language to be used for the incident descriptions. Parameter value must follow
        specification: BCP47. Supported values are available on  [iana.org](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry)
      example: en-US
      in: query
      name: lang
      required: false
      schema:
        type: string
      style: form
    latestEndTime:
      description: |
        The latest end time that is accepted for an incident to be included in the results.

        Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.
      example: '2019-10-20T00:00:00.00Z'
      in: query
      name: latestEndTime
      schema:
        $ref: '#/components/schemas/Time'
      style: form
    locationReferencing:
      description: |
        The location referencing scheme (or schemes) to be used in the response. Multiple location
        referencing schemes can be specified separated by commas (`,`).

        |Location Referencing | Description |
        |------------------|-------------|
        | `none`           | The response will not contain any location references such as tmc, olr, or shape points. |
        | `olr`            | Open Location References is a TISA location referencing standard also called TPEGOpenLR. Please visit https://tisa.org/ for more details. TISA Specifications are also published by ISO https://www.iso.org/ Specifications: ISO/TS 21219-22:2017 |
        | `shape`          | Shape points. Defines a location by a series of geo-coordinates. |
        | `tmc`            | Traffic Message Channel (TMC) location referencing method uses tables of pre-coded locations. For details please refer ISO specifications ISO 14819-3:2013 and ISO 14819-2:2013. |
      examples:
        olr:
          summary: Only return locations as OLR
          value: olr
        tmc_plus_olr:
          summary: Return locations with both TMC and OLR
          value: 'tmc,olr'
      explode: false
      in: query
      name: locationReferencing
      required: true
      schema:
        items:
          enum:
            - none
            - olr
            - shape
            - tmc
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    maxJamFactor:
      description: |
        The maximum jam factor value for flow items to be included in the response. All flow items
        with a _higher_ jam factor than the value specified by the `maxJamFactor` parameter are
        omitted. This parameter can be used by clients that require flow data only for
        congestion-free roads.

        The values must be in the range `0.0` to `10.0` (inclusive).

        Default: `1.0`
      example: 8
      in: query
      name: maxJamFactor
      required: false
      schema:
        default: 10
        type: number
      style: form
    minJamFactor:
      description: |
        The minimum jam factor value for flow items to be included in the response. All flow items
        with a _lower_ jam factor than the value specified by the `minJamFactor` parameter are
        omitted. The parameter can be used by clients that require flow data for congested roadways
        only.

        The value must be in the range `0.0` to `10.0` (inclusive).

        Default: `0.0`
      example: 5
      in: query
      name: minJamFactor
      required: false
      schema:
        default: 0
        type: number
      style: form
    originalId:
      description: |
        Identifier of the first traffic incident in a chain of updates. Once an incident chain
        has been created, this value will never change.
      example: '2349753562597427858'
      in: path
      name: originalId
      required: true
      schema:
        type: string
    type:
      description: |
        A list of incident type values separated by commas (`,`), to return results for.

        | Type              | Description |
        |-------------------|-------------|
        | `accident`        | | Indicates that there has been a collision
        | `construction`    | | Indicates that building or roadworks are taking place
        | `congestion`      | | Indicates that there has been a build up of vehicles
        | `disabledVehicle` | | Indicates that a vehicle is unable to move and is obstructing the road
        | `massTransit`     | | Indicates that a large amount of people are migrating from one location to another
        | `plannedEvent`    | | Indicates that an organised event is taking place causing disruption
        | `roadHazard`      | | Indicates that there are dangerous objects on the surface of the road
        | `roadClosure`     | | Indicates that the road has been closed, e.g. police presence
        | `weather`         | | Indicates that weather conditions are causing disruptions
        | `laneRestriction` | | Indicates that some of the lanes have access restrictions
        | `other`           | | Indicates that an incident not explainable with the types above has occurred
      examples:
        accidentOnly:
          summary: Only incidents of type accident
          value: accident
        roadHazardAndWeather:
          summary: Incidents of type roadHazard or weather
          value: 'roadHazard,weather'
      in: query
      name: type
      required: false
      schema:
        type: string
      style: form
    units:
      description: |
        Units of measurement to be used in incident descriptions.
        The default is metric.
      in: query
      name: units
      required: false
      schema:
        default: metric
        enum:
          - metric
          - imperial
        example: metric
        type: string
      style: form
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of errors.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    ErrorResponseBadGateway:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleBadGateway'
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of bad gateway.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    ErrorResponseGatewayTimeout:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleGatewayTimeout'
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of gateway timeout.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    ErrorResponseInternalServerError:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleInternalServerError'
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of internal server error.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    ErrorResponseServiceUnavailable:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleServiceUnavailable'
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of service unavailable.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    FlowResponseAuthenticationFailed:
      content:
        application/json:
          example:
            error: Unauthorized
            error_description: Token Validation Failure - invalid time in token
          schema:
            $ref: '#/components/schemas/AuthError'
      description: |
        Authentication Failed
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    FlowResponseInternalServerError:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorFlowResponseExampleInternalServerError'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Internal server error.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    FlowResponseInvalidRequest:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorFlowResponseExampleInvalidRequest'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    FlowResponseNotAllowed:
      content:
        application/json:
          example:
            error: Forbidden
            error_description: |
              These credentials do not authorize access. Please contact your customer representative or submit a request here https://developer.here.com/contact-us to upgrade your account. You can also get valid credentials by registering for a free trial license on https://developer.here.com.
          schema:
            $ref: '#/components/schemas/AuthError'
      description: |
        Not allowed, such as trying to request fields without having the necessary permissions.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    FlowResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FlowResponse'
      description: Flow response in case of success
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    HealthResponseFail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealthResponseFail'
      description: API response in case of failure.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    HealthResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealthResponseOK'
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentItemResponseInvalidRequest:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorIncidentItemResponseExampleInvalidId'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: |
        Failure to parse the request, it may have invalid incident id or query parameters.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentItemResponseNotFound:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorIncidentItemResponseExampleNotFound'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentItemResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncidentItem'
      description: Incident item response for specified original id
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentResponseAuthenticationFailed:
      content:
        application/json:
          example:
            error: Unauthorized
            error_description: Token Validation Failure - invalid time in token
          schema:
            $ref: '#/components/schemas/AuthError'
      description: |
        Authentication Failed
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentsResponseInternalServerError:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorIncidentsResponseExampleInternalServerError'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Internal server error.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentsResponseInvalidRequest:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorIncidentsResponseExampleInvalidRequest'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentsResponseNotAllowed:
      content:
        application/json:
          example:
            error: Forbidden
            error_description: |
              These credentials do not authorize access. Please contact your customer representative or submit a request here https://developer.here.com/contact-us to upgrade your account. You can also get valid credentials by registering for a free trial license on https://developer.here.com.
          schema:
            $ref: '#/components/schemas/AuthError'
      description: |
        Not allowed, such as trying to request fields without having the necessary permissions.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    IncidentsResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncidentsResponse'
      description: Incidents response in case of success
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    OpenApiResponseOk:
      content:
        application/json:
          examples:
            openapi:
              $ref: '#/components/examples/OpenApiResponse'
          schema:
            allOf:
              - $ref: '#/components/schemas/OpenApiResponse'
        application/x-yaml:
          examples:
            openapi:
              $ref: '#/components/examples/OpenApiResponse'
          schema:
            allOf:
              - $ref: '#/components/schemas/OpenApiResponse'
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    RequestUriTooLong:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleUriTooLong'
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
      description: API response in case of too long uri.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    ResponseServiceUnavailableError:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/ErrorResponseExampleServiceUnavailableError'
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Service unavailable.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    UnauthorizedErrorResponse:
      content:
        application/json:
          examples:
            errorResponseExample:
              $ref: '#/components/examples/UnauthorizedErrorResponse'
          schema:
            $ref: '#/components/schemas/AuthError'
      description: API response in case of unauthorized access.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
    VersionResponseOk:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/VersionResponse'
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          $ref: '#/components/headers/X-Correlation-Id'
        X-Request-Id:
          $ref: '#/components/headers/X-Request-Id'
  schemas:
    AuthError:
      description: Error object reported in case of authentication or authorization errors.
      example:
        error: Unauthorized
        error_description: ApiKey invalid. ApiKey not found.
      properties:
        error:
          description: Error message
          type: string
        error_description:
          description: Detailed information about the error
          type: string
      required:
        - error
      type: object
    Confidence:
      description: |
        The number between 0.0 and 1.0 indicating the proportion of real time data included in
        the speed calculation.

        * 0.7 < `confidence` <= 1.0 indicates real time speeds
        * 0.5 < `confidence` <= 0.7 indicates historical speeds
        * 0.0 < `confidence` <= 0.5 indicates speed limit

        This field can be used to identify whether the data for a location is derived from real
        time probe sources or historical information only.  All confidence data 0.71 and above
        is based on real-time information, where a confidence value of 0.75 or greater indicates
        high confidence real-time information.  A confidence value equal to 0.70 means that the
        data is derived from historical data only.
      maximum: 1
      minimum: 0
      type: number
    CurrentFlow:
      description: Information about flow information for a specific location.
      properties:
        confidence:
          $ref: '#/components/schemas/Confidence'
        freeFlow:
          $ref: '#/components/schemas/FreeFlow'
        jamFactor:
          $ref: '#/components/schemas/JamFactor'
        jamTendency:
          $ref: '#/components/schemas/JamTendency'
        junctionTraversability:
          $ref: '#/components/schemas/JunctionTraversability'
        lanes:
          $ref: '#/components/schemas/Lanes'
        speed:
          $ref: '#/components/schemas/SpeedCapped'
        speedUncapped:
          $ref: '#/components/schemas/SpeedUncapped'
        subSegments:
          $ref: '#/components/schemas/SubSegments'
        traversability:
          $ref: '#/components/schemas/Traversability'
      required:
        - freeFlow
        - jamFactor
    EmissionRestriction:
      description: |
        The class of emission that is restricted.
        More detail about each emission type can be found in https://en.wikipedia.org/wiki/European_emission_standards.

        Possible emisson types are:
        | Emission Type |
        |---------------|
        | `euro3` |
        | `euro3d4` |
        | `euro4` |
        | `euro5` |
      enum:
        - euro3
        - euro3d4
        - euro4
        - euro5
      example: euro4
      type: string
    EquipmentTypeRestriction:
      description: |
        The type of equipment that is restricted.

        Possible equipments are:
        | Equipment Type |
        |---------------|
        | `withCaravan` |
        | `withTrailer` |
        | `withoutSnowChains` |
        | `withoutWinterTyres` |
      enum:
        - withCaravan
        - withTrailer
        - withoutSnowChains
        - withoutWinterTyres
      example: withTrailer
      type: string
    ErrorResponse:
      description: Response in case of error
      properties:
        action:
          description: Human-readable description of the action that can be taken to correct the error
          example: Request a valid id
          type: string
        cause:
          description: Human-readable explanation for the error
          example: The input data in question does not comply with validation rules
          type: string
        code:
          description: |
            Machine readable service error code.

            All error codes of this service start with "`E608`". The last three digits describe a
            specific error. Provide this error code when contacting support.

            **NOTE:** Please note that the list of possible error codes could be extended in the
            future. The client application is expected to handle such a case gracefully.

            | Code      | Reason  |
            | --------- | ------- |
            | `E608001` | Malformed query. Invalid traffic event type. Check the error message for details. |
            | `E608002` | Malformed query. Parameter `in` is missing. Check the error message for details. |
            | `E608003` | Malformed query. Parameter `in` is invalid. Check the error message for details. |
            | `E608004` | Malformed query. Invalid `in` type. Check the error message for details. |
            | `E608005` | Malformed query. Invalid BBox parameter. Check the error message for details. |
            | `E608006` | Malformed query. Invalid BBox size. Check the error message for details. |
            | `E608007` | Malformed query. Invalid latitude parameter. Check the error message for details. |
            | `E608008` | Malformed query. Latitude value is too small. Check the error message for details. |
            | `E608009` | Malformed query. Latitude value is too big. Check the error message for details. |
            | `E608010` | Malformed query. Invalid longitude parameter. Check the error message for details. |
            | `E608011` | Malformed query. Longitude value is too small. Check the error message for details. |
            | `E608012` | Malformed query. Longitude value is too big. Check the error message for details. |
            | `E608013` | Malformed query. Invalid circle parameter. Check the error message for details. |
            | `E608014` | Malformed query. Invalid circle center. Check the error message for details. |
            | `E608015` | Malformed query. Invalid circle/corridor radius. Check the error message for details. |
            | `E608016` | Malformed query. Circle/Corridor radius is too small. Check the error message for details. |
            | `E608017` | Malformed query. Circle/Corridor radius is too big. Check the error message for details. |
            | `E608018` | Malformed query. Invalid Frc. Check the error message for details. |
            | `E608019` | Malformed query. Invalid polyline. Check the error message for details. |
            | `E608022` | Internal error. Failed to fetch traffic information. Check the error message for details. |
            | `E608023` | Internal error. Failed to fetch traffic information. Check the error message for details. |
            | `E608038` | Malformed query. Incident item not found or removed from system. Check the error message for details. |
            | `E608039` | Item not found. Incident id failed validation. Check the error message for details. |
            | `E608040` | Malformed query. Invalid criticality value. Check the error message for details. |
            | `E608041` | Malformed query. Invalid incident type value. Check the error message for details. |
            | `E608042` | Malformed query. Invalid corridor parameter. Check the error message for details. |
            | `E608043` | Malformed query. Invalid incident earliestStartTime or latestEndTime. Check the error message for details. |
            | `E608044` | Malformed query. Incident latestEndTime should be bigger than or equal to earliestStartTime. Check the error message for details. |
            | `E608045` | Malformed query. Request query is too long. Check the error message for details. |
            | `E608046` | Malformed query. Invalid location referencing value. Check the error message for details. |
            | `E608047` | Malformed query. Invalid language value. Check the error message for details. |
            | `E608049` | Malformed query. Invalid flow minJamFactor or maxJamFactor values. Check the error message for details. |
            | `E608050` | Malformed query. Invalid min/maxJamFactor value. maxJamFactor cannot be less than minJamFactor. |
            | `E608051` | Malformed query. Parameter `locationReferencing` is missing. Check the error message for details. |
            | `E608052` | Malformed query. Other location referencing values cannot be provided together with 'none'. |
            | `E608053` | Item not found. Traffic incident found but does not support requested location referencing. Check the error message for details. |
            | `E608054` | Malformed query. Invalid advanced feature value. Check the error message for details. |
            | `E608055` | Malformed query. Corridor length is too long. Check the error message for details. |
            | `E608056` | Malformed query. Corridor length is too short. Check the error message for details. |
            | `E608057` | Malformed query. Bounding box coordinates do not follow south-west, north-east order. Check the error message for details. |
            | `E608060` | Malformed query. Unsupported units value. |
            | `E608666` | Internal error. Check the error message for details. |
          example: E608001
          type: string
        correlationId:
          description: Auto-generated id that univocally identifies the request
          example: 4199533b-6290-41db-8d79-edf4f4019a74
          type: string
        status:
          description: HTTP status code
          example: 400
          type: integer
        title:
          description: Human-readable error description
          example: Input data failed validation
          type: string
      required:
        - title
        - status
        - code
        - cause
        - action
        - correlationId
    FlowItem:
      description: Information about traffic flow for a specific location.
      properties:
        currentFlow:
          allOf:
            - $ref: '#/components/schemas/CurrentFlow'
        location:
          $ref: '#/components/schemas/Location'
      required:
        - location
        - currentFlow
    FlowResponse:
      description: Returns flow items within the specified area.
      properties:
        results:
          description: List of flow items.
          items:
            $ref: '#/components/schemas/FlowItem'
          type: array
        sourceUpdated:
          allOf:
            - $ref: '#/components/schemas/Time'
          description: 'Last update time of traffic data source. Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.'
      required:
        - results
    FreeFlow:
      description: |
        The free flow speed speed (in meters per second) is a reference speed provided to
        indicate the speed on the segment at which vehicles should be considered to be able to
        travel without impediment.
      example: 50
      minimum: 0
      type: number
    FuelTypeRestriction:
      description: |
        The type of fuel that is restricted.

        Possible fuel types are:
        | Fuel Type | Description            |
        |-----------|------------------------|
        | `diesel`  | Only vehicles with diesel fuel |
        | `lpg`  | Only vehicles with lpg fuel |
        | `petrol`   | Only vehicles with petrol fuel  |
      enum:
        - petrol
        - diesel
        - lpg
      example: diesel
      type: string
    HealthResponseFail:
      description: Returns the health of the service
      properties:
        status:
          description: |
            Health status of the service:

            * `ok` - the service is operating normally
            * `fail` - the service is currently encountering a failure
          enum:
            - fail
          type: string
      required:
        - status
    HealthResponseOK:
      description: Returns the health of the service
      properties:
        status:
          description: |
            Health status of the service:

            * `ok` - the service is operating normally
            * `fail` - the service is currently encountering a failure
          enum:
            - ok
          type: string
    IncidentCriticality:
      description: |
        The severity of the incident that has occured, with the following possible values: low (least severe), minor, major, and critical (most severe).
      enum:
        - critical
        - major
        - minor
        - low
      example: major
      type: string
    IncidentDetails:
      description: Specific details of the incident.
      properties:
        codes:
          description: |
            A prioritised list of codes which describe the cause of the
            incident according to the AlertC specification.

            The codes are given in order of importance, so the first item in
            the list is considered the primary cause of the incident.

            The full list of codes in the AlertC specification ISO 14819-2:2013
            can be obtained from https://www.iso.org/standard/59231.html.
          example:
            - 401
            - 802
          items:
            type: integer
          type: array
        criticality:
          allOf:
            - $ref: '#/components/schemas/IncidentCriticality'
        description:
          allOf:
            - $ref: '#/components/schemas/LocalizedString'
          description: A full natural language description of the incident.
          example:
            language: en-US
            value: Closed between S Halsted St and S Clinton St - Closed due to roadwork.
        descriptionParts:
          allOf:
            - $ref: '#/components/schemas/LocationDescriptionParts'
          example:
            atOffTmc:
              summary: Proximity type `at`
              value:
                intersectingRoadName: Joy Ranch Rd
                proximityType: at
                roadName: 20th St
        endTime:
          allOf:
            - $ref: '#/components/schemas/Time'
          description: |
            End time of the incident. Format is **RFC 3339**, section 5.6 as defined by `date-time`.
            Will always be UTC time.
          example: '2019-10-13T14:20:00.00Z'
        entryTime:
          allOf:
            - $ref: '#/components/schemas/Time'
          description: |
            The time the incident was entered into the system. Format is **RFC 3339**, section 5.6
            as defined by `date-time`. Will always be UTC time.
          example: '2019-10-09T11:38:13.76Z'
        hrn:
          description: |
            Unique identifier for traffic incident in HRN notation.
          example: 'here:traffic:incident:3848418285967206032'
          type: string
        id:
          description: Unique identifier for traffic incident.
          example: '3848418285967206032'
          type: string
        junctionTraversability:
          $ref: '#/components/schemas/JunctionTraversability'
        originalHrn:
          description: |
            Identifier of the first traffic incident in a chain of updates in HRN notation.
          example: 'here:traffic:incident:2349753562597427858'
          type: string
        originalId:
          description: |
            Identifier of the first traffic incident in a chain of updates. Once an incident chain
            has been created, this value will never change.
          example: '2349753562597427858'
          type: string
        parentId:
          description: |
            Identifier of another incident to which this incident is linked. For example, if the
            item is a congestion item caused by an accident, this id will refer to the accident.
          example: '4273574943639816284'
          type: string
        roadClosed:
          description: A flag to indicate whether this incident is a road closure.
          example: true
          type: boolean
        startTime:
          allOf:
            - $ref: '#/components/schemas/Time'
          description: |
            Start time of the incident. Format is **RFC 3339**, section 5.6 as defined by
            `date-time`. Will always be UTC time.
          example: '2019-10-12T07:20:00.00Z'
        summary:
          allOf:
            - $ref: '#/components/schemas/LocalizedString'
          description: A short natural language description of the incident.
          example:
            language: en-US
            value: Closed due to roadwork.
        type:
          allOf:
            - $ref: '#/components/schemas/IncidentType'
        vehicleRestrictions:
          description: A list of restrictions that apply to the vehicles passing through this area.
          items:
            $ref: '#/components/schemas/VehicleRestriction'
          type: array
      required:
        - id
        - originalId
        - roadClosed
    IncidentItem:
      description: Information about a traffic incident.
      properties:
        incidentDetails:
          $ref: '#/components/schemas/IncidentDetails'
        location:
          $ref: '#/components/schemas/Location'
    IncidentType:
      description: |
        An open list of possible incident types. The incident `type` gives a high level
        representation of the more detailed `code` field which gives a numerical value mapped to
        the AlertC event codes.

        | Type              | Description |
        |-------------------|-------------|
        | `accident`        | Indicates that there has been a collision |
        | `construction`    | Indicates that building or roadworks are taking place |
        | `congestion`      | Indicates that there has been a build up of vehicles |
        | `disabledVehicle` | Indicates that a vehicle is unable to move and is obstructing the road |
        | `massTransit`     | Indicates that an event is present related to public transit |
        | `plannedEvent`    | Indicates that an organised event is taking place causing disruption |
        | `roadHazard`      | Indicates that there are dangerous objects on the surface of the road |
        | `roadClosure`     | Indicates that the road has been closed, e.g. police presence |
        | `weather`         | Indicates that weather conditions are causing disruptions |
        | `laneRestriction` | Indicates that some of the lanes have access restrictions |
        | `other`           | Indicates that an incident not explainable with the types above has occurred |

        Note: Since new types are expected to appear, it is important to check for unknown types
        when parsing this value.
      example: construction
      type: string
      x-extensible-enum:
        - accident
        - congestion
        - construction
        - disabledVehicle
        - massTransit
        - plannedEvent
        - roadHazard
        - roadClosure
        - weather
        - laneRestriction
        - other
    IncidentsResponse:
      description: Returns incident items within the specified area.
      properties:
        results:
          description: List of incident items.
          items:
            $ref: '#/components/schemas/IncidentItem'
          type: array
        sourceUpdated:
          allOf:
            - $ref: '#/components/schemas/Time'
          description: 'Last update time of traffic data source. Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.'
      required:
        - results
    JamFactor:
      description: |
        The number between 0.0 and 10.0 indicating the expected quality of travel. When there
        is a road closure, the `jamFactor` will be 10.0. As the value approaches 10.0 the
        quality of travel is getting worse.
      maximum: 10
      minimum: 0
      type: number
    JamTendency:
      default: 0
      description: |
        A representation of whether the congestion is increasing, decreasing, or constant. The
        jam tendency may take the following values.

        | Jam Tendency        | Description                    |
        |---------------------|--------------------------------|
        | +2                  | Rapidly increasing congestion. |
        | +1                  | Increasing congestion.         |
        |  0                  | Constant congestion.           |
        | -1                  | Decreasing congestion.         |
        | -2                  | Rapidly decreasing congestion. |

        Default value of 0 can be assumed when this attribute is not present.
      example: 2
      type: integer
      x-extensible-enum:
        - -2
        - -1
        - 0
        - 1
        - 2
    JunctionTraversability:
      default: intermediateClosedEdgeOpen
      description: |
        Indicates junction traversability. Used for road closures to indicate if the closure can
        be crossed.

        | Junction Traversability | Description |
        |-------------------------|-------------|
        | `allOpen`             | All junctions are open. |
        | `allClosed`               | All junctions are closed. |
        | `intermediateClosedEdgeOpen` | Junctions at beginning and end of roadway are open, intermediate junctions are closed. |
        | `startOpenOthersClosed`             | First edge junction open, all others closed. |
        | `endOpenOthersClosed`             | Last edge junction open; all others closed. |

        The default value is `intermediateClosedEdgeOpen`.
      enum:
        - allOpen
        - intermediateClosedEdgeOpen
        - allClosed
      example: allClosed
      type: string
    Lane:
      description: |
        Information about Lane Level Traffic.
      properties:
        jamFactor:
          $ref: '#/components/schemas/JamFactor'
        laneNumbers:
          description: 'Identifier of the lane. Lane numbers use the HERE Map method of lane numbering where the left lane is 1 and each lane to the right of the left lane is numbered sequentially. For example, in a three-lane road, the left lane is 1, the center lane is 2, and the right lane is 3. Lane 1 is always the left lane, regardless of the driving side. If multiple lane numbers are presented, all lanes will have the traffic condition. Lane numbers will always be sequential.'
          example: '[1,2]'
          items:
            type: integer
          type: array
        laneType:
          $ref: '#/components/schemas/LaneType'
        speedUncapped:
          $ref: '#/components/schemas/SpeedUncapped'
      required:
        - laneNumbers
    LaneType:
      description: |
        Identifies type of the lane, with the following possible values.
        |    Type    | Description |
        |------------|-------------|
        | 'hov'      | Indicates a high-occupancy vehicle lane |
      enum:
        - hov
      example: hov
      type: string
    Lanes:
      description: |
        Provided only if there are different lane speeds along a roadway.

        The `Lane` message contains information about the speed of traffic in individual lanes in a roadway.
        The number of lanes along a roadway can be determined by looking at the maximum lane number in all `Lane` messages in the
        segment.
      items:
        $ref: '#/components/schemas/Lane'
      type: array
    Length:
      description: Distance in meters between the beginning and end of a roadway or sub-segment.
      minimum: 0
      type: number
    LocalizedString:
      description: String with language code.
      example:
        language: de
        value: InvalidenstraÃe
      properties:
        language:
          description: Language in BCP47 format
          type: string
        value:
          description: String written in the language specified in the language property.
          type: string
      required:
        - value
        - language
    Location:
      description: |
        Defines the location affected by traffic flow or incident.

        There are a number of location reference schemes which may be used depending on the
        `locationReferencing` parameter provided in the request and the type of the roadway.
      properties:
        description:
          description: A description of the location.
          example: Eppendorfer Stieg
          type: string
        length:
          allOf:
            - $ref: '#/components/schemas/Length'
          description: Total length (in meters) of the roadway represented by this location.
          example: 47.2
        olr:
          $ref: '#/components/schemas/LocationOpenLR'
        shape:
          $ref: '#/components/schemas/LocationShape'
        tmc:
          $ref: '#/components/schemas/LocationTMC'
      required:
        - length
      type: object
    LocationDescriptionParts:
      description: Parts that make up the location description.
      properties:
        direction:
          description: The direction of the travel affected by the incident.
          type: string
        endIntersectingRoadName:
          description: |
            The name of a second intersecting roadway that serves as a reference. If this value is
            present, the reference will be to the end of the section affected by the incident and
            `intersectingRoadName` will be at the beginning of the affected section.
          type: string
        endRoadName:
          description: |
            In case the roadway affected by the incident changes names from the beginning to the
            end of the affected section, this will be the name at the end and `roadName` will be
            the name at the beginning.
          type: string
        intersectingRoadName:
          description: The name of an intersecting roadway that serves as a reference.
          type: string
        proximityType:
          description: |
            Specifies the type of location proximity.
            | Type          | Description |
            |---------------|-------------|
            | `on`          | Only information about the road on which the incident occurs on is available |
            | `at`          | In addition to the `roadName` field, `intersectingRoadName` will provide a reference point close to the incident |
            | `between`     | The incident occurs between `intersectingRoadName` and `endIntersectingRoadName` |
            | `approaching` | The incident occurs before `intersectingRoadName` |
            | `past`        | The incident occurs after `intersectingRoadName` |
            | `ramp`        | The incident occurs on a ramp |
          enum:
            - 'on'
            - at
            - between
            - approaching
            - past
            - ramp
          type: string
        roadName:
          description: The name of the roadway that the incident occurs on.
          type: string
      required:
        - proximityType
        - roadName
    LocationOpenLR:
      description: |
        TPEG OpenLR encoded as Base 64 strings.
        TPEG OpenLR location referencing is a TISA standard. Please visit https://tisa.org/ for more details. TISA Specifications are also published by
        ISO https://www.iso.org/
        Specifications: ISO/TS 21219-22:2017
      example: CCkBEAAlJAg5ACJIJAAJBQQCAnsACgUEApJ2AAEh94kACQUEAgL7ADA+AA==
      type: string
    LocationShape:
      description: |
        Defines a location by a series of geo-coordinate describing the shape of the roadway.
      properties:
        links:
          items:
            $ref: '#/components/schemas/LocationShapeLink'
          type: array
      required:
        - links
      type: object
    LocationShapeLink:
      description: |
        Points describing a single link. At least 2 points will be present in each link.
      properties:
        length:
          allOf:
            - $ref: '#/components/schemas/Length'
          description: |
            Length (in meters) of shape link. The sum of all links will add up to the length of the
            parent `Location` object.
          example: 104.32
        points:
          items:
            description: Single point
            properties:
              lat:
                description: Latitude of the point.
                example: 52.55126
                type: number
              lng:
                description: Longitude of the point
                example: 13.37715
                type: number
            required:
              - lat
              - lng
            type: object
          type: array
      required:
        - points
        - length
      type: object
    LocationTMC:
      description: |
        Location reference in TMC format. This type of location reference can only be provided on
        roadways that are part of the TMC definition.

        TMC Location referencing specification can be obtained from https://www.iso.org/
        Specifications: ISO 14819-3:2013
      properties:
        affectedLength:
          allOf:
            - $ref: '#/components/schemas/Length'
          default: 0
          description: |
            Length in meters of the affected location. This field will only be populated if the
            entire TMC is **not** covered.
          example: 107.2
        ebuCountryCode:
          description: |
            TMC Country Code. Worldwide there may be conflicts in the EBU Country Code, however the
            combination of the `extendedCountryCode` and `ebuCountryCode` is unique.
          example: D
          type: string
        extendedCountryCode:
          description: |
            The Extended Country Code may be used together with the EBU Country Code to uniquely
            identify a country worldwide.
          example: E0
          type: string
        extent:
          default: 1
          description: |
            The extent indicates the number of adjacent TMC locations that are also affected by the event.
            When the event affects only one TMC location that is specified by the `locationId`, the extent is zero.

            Locations are counted in the driving direction.
          example: 3
          minimum: 0
          type: integer
        locationId:
          description: Unique location identifier within a table.
          example: 10288
          type: integer
        primaryOffset:
          allOf:
            - $ref: '#/components/schemas/Length'
          default: 0
          description: |
            Distance in meters from the end of the Primary TMC, where the end point of the TMC is
            the last link associated with the TMC in the driving direction.
          example: 23.2
        queuingDirection:
          description: |
            This represents the TMC queuing direction of traffic in positive or negative notation.
            Therefore, if the direction of travel is Eastbound (+), the queuing direction will be
            Westbound (-).
          enum:
            - '-'
            - +
          example: +
          type: string
        tableId:
          description: |
            Regional TMC table identifier. For example, Philadelphia/Eastern PA is 3 and the only
            table in Germany is 1.
          type: integer
      required:
        - extendedCountryCode
        - ebuCountryCode
        - tableId
        - locationId
        - queuingDirection
      type: object
    OccupancyRestriction:
      description: A restriction on the number of persons in the vehicle that can pass through an area.
      maxProperties: 1
      minProperties: 1
      properties:
        greaterThan:
          example: 10
          type: number
        lessThan:
          example: 10
          type: number
      type: object
    OpenApiResponse:
      additionalProperties: true
      description: API response for the openapi endpoint
      type: object
    PlateNumberRestriction:
      description: |
        The type of plate that is restricted.

        Possible plate types are:
        | Plate Type |
        |---------------|
        | `evenNumberPlate` |
        | `oddNumberPlate` |
      enum:
        - evenNumberPlate
        - oddNumberPlate
      example: evenNumberPlate
      type: string
    SizeRestriction:
      description: A restriction on the size of a vehicle in centimeters that can pass through an area.
      maxProperties: 2
      minProperties: 2
      properties:
        dimension:
          description: |
            The dimension that is restricted.

            Possible dimeniosn are:
            | Dimension | Description            |
            |-----------|------------------------|
            | `height`  | Vehicle height |
            | `length`  | Vehicle length |
            | `width`   | Vehicle width  |
          enum:
            - height
            - length
            - width
          example: height
          type: string
        greaterThan:
          example: 10
          type: number
        lessThan:
          example: 10
          type: number
      required:
        - dimension
      type: object
    SpeedCapped:
      description: |
        The average speed (in meters per second), capped by the speed limit, that current
        traffic is travelling.
      example: 60
      minimum: 0
      type: number
    SpeedUncapped:
      description: |
        The average speed (in meters per second), not capped by the speed limit, that current
        traffic is travelling.
      example: 80
      minimum: 0
      type: number
    SubSegment:
      description: |
        Flow information for a sub-segment of a defined roadway.
      properties:
        confidence:
          $ref: '#/components/schemas/Confidence'
        freeFlow:
          $ref: '#/components/schemas/FreeFlow'
        jamFactor:
          $ref: '#/components/schemas/JamFactor'
        jamTendency:
          $ref: '#/components/schemas/JamTendency'
        junctionTraversability:
          $ref: '#/components/schemas/JunctionTraversability'
        lanes:
          $ref: '#/components/schemas/Lanes'
        length:
          $ref: '#/components/schemas/Length'
        speed:
          $ref: '#/components/schemas/SpeedCapped'
        speedUncapped:
          $ref: '#/components/schemas/SpeedUncapped'
        traversability:
          $ref: '#/components/schemas/Traversability'
      required:
        - length
        - freeFlow
        - jamFactor
      type: object
    SubSegments:
      description: |
        Provided only if the current flow information is more precise than the road defined.

        If sub-segments are provided, the length of all sub-segments will add up to the length of
        the corresponding location.
      items:
        $ref: '#/components/schemas/SubSegment'
      type: array
    Time:
      description: '**RFC 3339**, section 5.6 as defined by either `date-time` or `date-only` ''T'' `partial-time` (ie no time-offset).'
      format: date-time
      type: string
    TrafficTypeRestriction:
      description: |
        The type of traffic that is restricted.

        Possible traffic types are:
        | Traffic Type |
        |---------------|
        | `residentsTraffic` |
        | `throughTraffic` |
        | `noThrough` |
      enum:
        - throughTraffic
        - residentsTraffic
        - noThrough
      example: residentsTraffic
      type: string
    Traversability:
      default: open
      description: |
        Indicates whether this roadway can be driven. The possible values are given in the following
        table.

        | Traversability          | Description |
        |-------------------------|-------------|
        | `open`                  | Roadway is open and can be driven. |
        | `closed`                | Roadway is closed (blocked) and cannot be driven. |
        | `reversibleNotRoutable` | The roadway is reversible but it is currently not routable. See below for further information. |

        This traversability status is the best source of information when routing through reversible
        lanes. This data will be more accurate than any other source, including the base map data,
        as published reversible information can be changed based on daily traffic flow or special
        events.

        The application can deal with reversible not routable in any way, but it is recommended
        that it is used to indicate not routable and to not show traffic on this roadway in map
        display.

        For reversible roads, both directions will be not routable for portions of the day when the
        road direction is being switched.  There is a possibility that portions of a reversible
        road will be marked a `closed` rather than `reversibleNotRoutable`; when this happens, both
        directions of the reversible will be closed, which can happen for construction or major
        accidents.

        The default value is `open`.
      enum:
        - open
        - closed
        - reversibleNotRoutable
      example: open
      type: string
    VehicleRestriction:
      description: A single vechile restriction with vehicle and restriction types. Vehicles matching both the vehicle type and the restriction rules are NOT allowed to pass through the area. e.g. a "weight restriction" of "greaterThan" 2000 Kg means that vehicles weighing more than 2000 Kg cannot pass.
      properties:
        restriction:
          example:
            size:
              dimension: height
              lessThan: 200
          maxProperties: 1
          minProperties: 1
          properties:
            carOccupancy:
              $ref: '#/components/schemas/OccupancyRestriction'
            emissionType:
              $ref: '#/components/schemas/EmissionRestriction'
            equipmentType:
              $ref: '#/components/schemas/EquipmentTypeRestriction'
            fuelType:
              $ref: '#/components/schemas/FuelTypeRestriction'
            plateType:
              $ref: '#/components/schemas/PlateNumberRestriction'
            size:
              $ref: '#/components/schemas/SizeRestriction'
            trafficType:
              $ref: '#/components/schemas/TrafficTypeRestriction'
            weight:
              $ref: '#/components/schemas/WeightRestriction'
        vehicleType:
          $ref: '#/components/schemas/VehicleType'
    VehicleType:
      description: |
        Type of the vehicle an incident restriction applies to.

        | Type              |
        |-------------------|
        | 'bus' |
        | 'car' |
        | 'heavyGoodsVehicle' |
        | 'lorry' |
        | 'motorcycle' |
        | 'motorVehicle' |
        | 'taxi' |
        | 'train' |
        | 'transportingAnAbnormalSizeLoad' |
        | 'transportingHazardousGoods' |
        | 'vehicleWithTrailer' |
        | 'other' |
      enum:
        - bus
        - car
        - heavyGoodsVehicle
        - lorry
        - motorcycle
        - motorVehicle
        - taxi
        - train
        - transportingAnAbnormalSizeLoad
        - transportingHazardousGoods
        - vehicleWithTrailer
        - other
      example: motorVehicle
      type: string
    VersionResponse:
      description: Returns the versions of the service components.
      properties:
        apiVersion:
          description: The current version of the API.
          example: 7.2.0
          type: string
        serviceVersion:
          description: The current version of the service.
          example: 7.2.0
          type: string
      required:
        - apiVersion
    WeightRestriction:
      description: A restriction on the weight of a vehicle in kilograms that can pass through an area.
      maxProperties: 2
      minProperties: 2
      properties:
        greaterThan:
          example: 2000
          type: number
        lessThan:
          example: 2000
          type: number
        weightType:
          description: |
            The type of weight that is restricted.

            Possible weight types are:
            | Weight Type | Description            |
            |-----------|------------------------|
            | `weightPerAxle`  | Weight per axle |
            | `grossWeight`  | Vehicle weight including trailers and shipped good |
          enum:
            - grossWeight
            - weightPerAxle
          example: grossWeight
          type: string
      required:
        - weightType
      type: object
  securitySchemes:
    ApiKey:
      description: |
        A key generated specifically to authenticate API requests.
        For more information on how to get an API key, see https://developer.here.com/documentation/identity-access-management/dev_guide/index.html.
      in: query
      name: apiKey
      type: apiKey
    Bearer:
      bearerFormat: JWT
      description: |
        A token obtained from a separate endpoint using client credentials and an OAuth 1.0a HMAC-SHA256 signed request.
        For more information on how to get a bearer token, see https://developer.here.com/documentation/identity-access-management/dev_guide/index.html.
      scheme: bearer
      type: http
